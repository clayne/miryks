Esp.c needs a rewrite like Nif.c did

So we'd end up with Espp.c or;

/// esp with pointers

Right now, an entire esp is read into memory,
and then pointers are made to point
to grups, records, subrecords.

Worse, we make huge sets of metadata for every record,
like when it has to point to compressed space,
rather than file space. Wasteful.

Bsa.c does it better, reading fld and file
records and abstracting this with the rc,
a metadata and interface.

Instead of reading an esm into RAM, just use
a File * which is c. Process the file like you
would a buffer, and keep the handle.

For Espp.c the change is a File * stream,
and updating the Buf + Pos to read beforehand.

Another waste is the horrible growing c++-like
vector in c that I copied from stack overflow.
It grows everything * 2 when it hits its capacity.
Yikes.

Espp sounds like a double pointer, maybe better
espc for compact or c, since I will be throwing
in lots of size impacting stuff in here.
