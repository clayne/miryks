#include <vector>
#include <fstream>

using namespace std;

struct fircd_t;

struct bsa_hedr_t
{
	char id[4];
	unsigned long ver, offset, flags, fos, fis, fosl, fisl, file_flags;
};

struct forcd_t {
	long long hash;
	unsigned long fcount, offset;
};

struct fblk_t {
	long long nameHash;
	unsigned long size, offset;
};

struct fircd_t {
	long long nameHash;
	unsigned long size, offset;
};

struct folder_t {
	string name;
};

struct file_t {
	string name;
};

struct bsa_t
{
	bsa_hedr_t hedr;
	forcd_t *forcds;
	fircd_t *fircds;
	char *finames, *fonames;
	basic_ifstream<char> is;
	vector<unsigned char> data;
	vector<folder_t> folders;
	vector<file_t> files;
};

bsa_t bsa_load(const string &);
void bsa_read_folder_records(bsa_t &);
void bsa_read_file_records(bsa_t &);
void bsa_read_file_names(bsa_t &);

void bsa_print_hedr(bsa_t &);
void bsa_print_forcd(bsa_t &, int);
void bsa_print_fircd(bsa_t &, int);

void bsa_produce_fofi(bsa_t &);