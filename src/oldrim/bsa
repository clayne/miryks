#include <vector>
#include <fstream>

using namespace std;

#define api

struct hedr_t {
	char id[4];
	unsigned long ver, offset, archive_flags, fos, fis, fol, fil, file_flags;
};

struct fld_t {
	unsigned long long hash;
	unsigned long num, offset;
};

struct fle_t {
	unsigned long long nameHash;
	unsigned long size, offset;
};

struct bsa_t {
	hedr_t hdr;
	ifstream is;
	fld_t *folds;
	fle_t **files;
	const char **charsf, **charsff;
};

api bsa_t bsa_load(const string &);
void bsa_read_folder_records(bsa_t &);
void bsa_read_file_records(bsa_t &);
void bsa_read_filenames(bsa_t &);

const char *bsa_read_bzstring(bsa_t &);

void bsa_print(bsa_t &);
void bsa_print_hedr(bsa_t &);
void bsa_print_fld_rcd(bsa_t &, int);
void bsa_print_file_rcd(bsa_t &, int, int);

api void bsa_find(bsa_t &, const char *);
