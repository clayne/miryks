#ifndef OPENGL_MATERIAL_H
#define OPENGL_MATERIAL_H

#include "types"


struct material_t
{
	static int pool;
	static material_t *active;
	
	int id;
	string name;

	texture_t *map = nullptr, *normal_map = nullptr;
	shader_t *shader = nullptr;

	bool transparent, double_sided, blending, testing, decal;
	float opacity, treshold, shininess, glossiness;
	float rotation;

	vec3 color, specular, emissive;
	vec2 offset, repeat, center;
	mat3 uv_transform;

	material_t();

	void compose_uv_transform();
	void set_uv_transform_directly(float, float, float, float, float, float, float);

	void Use();
	static void Unuse(material_t *, material_t *);

	struct depth_func_t
	{
		int sfactor, dfactor;
	} depth_func;
};

#endif
