#ifndef OPENGL_MATERIAL_H
#define OPENGL_MATERIAL_H

#include "types"

struct Material_t
{
	static int pool;
	static Material_t *active;

	int id;
	string name;

	Texture_t *map = nullptr, *normal_map = nullptr;
	Shader_t *shader = nullptr;

	bool transparent, double_sided, blending, testing, decal;
	float opacity, treshold, shininess, glossiness;
	float rotation;

	vec3 color, specular, emissive;
	vec2 offset, repeat, center;
	mat3 uv_transform;

	Material_t();

	void compose_uv_transform();
	void set_uv_transform_directly(float, float, float, float, float, float, float);

	void Use();
	static void Unuse(Material_t * = nullptr, Material_t * = nullptr);

	struct depth_func_t
	{
		int sfactor, dfactor;
	} depth_func;
};

#endif
